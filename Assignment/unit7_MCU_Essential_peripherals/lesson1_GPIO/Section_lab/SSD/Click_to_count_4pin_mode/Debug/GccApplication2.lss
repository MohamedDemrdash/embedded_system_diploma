
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000052e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000052e  000005a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000005a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000c70  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000a0  00000000  00000000  00000cf8  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000579  00000000  00000000  00000d98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000139  00000000  00000000  00001311  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002d0  00000000  00000000  0000144a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b8  00000000  00000000  0000171c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000163  00000000  00000000  000017d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000396  00000000  00000000  00001937  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e2       	ldi	r30, 0x2E	; 46
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 95 02 	jmp	0x52a	; 0x52a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include "utilities/STD_Types.h"
#include "MCAL/DIO Driver/DIO_interface.h"

int main(void)
{
	DIO_set_pin_dir('A',1,OUTPUT);
  92:	81 e4       	ldi	r24, 0x41	; 65
  94:	61 e0       	ldi	r22, 0x01	; 1
  96:	41 e0       	ldi	r20, 0x01	; 1
  98:	0e 94 5c 00 	call	0xb8	; 0xb8 <DIO_set_pin_dir>
	DIO_set_pin_dir('B',2,OUTPUT);
  9c:	82 e4       	ldi	r24, 0x42	; 66
  9e:	62 e0       	ldi	r22, 0x02	; 2
  a0:	41 e0       	ldi	r20, 0x01	; 1
  a2:	0e 94 5c 00 	call	0xb8	; 0xb8 <DIO_set_pin_dir>
    while(1)
    {
        DIO_toggle_pin('A',1);
  a6:	81 e4       	ldi	r24, 0x41	; 65
  a8:	61 e0       	ldi	r22, 0x01	; 1
  aa:	0e 94 7e 01 	call	0x2fc	; 0x2fc <DIO_toggle_pin>
		DIO_toggle_pin('b',2);
  ae:	82 e6       	ldi	r24, 0x62	; 98
  b0:	62 e0       	ldi	r22, 0x02	; 2
  b2:	0e 94 7e 01 	call	0x2fc	; 0x2fc <DIO_toggle_pin>
  b6:	f7 cf       	rjmp	.-18     	; 0xa6 <main+0x14>

000000b8 <DIO_set_pin_dir>:
#include "../../utilities/BIT_Math.h"
#include "DIO_interface.h"

void DIO_set_pin_dir(uint8_t port,uint8_t pin,uint8_t dir)
{
	switch (port)
  b8:	84 34       	cpi	r24, 0x44	; 68
  ba:	09 f4       	brne	.+2      	; 0xbe <DIO_set_pin_dir+0x6>
  bc:	71 c0       	rjmp	.+226    	; 0x1a0 <DIO_set_pin_dir+0xe8>
  be:	85 34       	cpi	r24, 0x45	; 69
  c0:	48 f4       	brcc	.+18     	; 0xd4 <DIO_set_pin_dir+0x1c>
  c2:	82 34       	cpi	r24, 0x42	; 66
  c4:	99 f1       	breq	.+102    	; 0x12c <DIO_set_pin_dir+0x74>
  c6:	83 34       	cpi	r24, 0x43	; 67
  c8:	08 f0       	brcs	.+2      	; 0xcc <DIO_set_pin_dir+0x14>
  ca:	4d c0       	rjmp	.+154    	; 0x166 <DIO_set_pin_dir+0xae>
  cc:	81 34       	cpi	r24, 0x41	; 65
  ce:	09 f0       	breq	.+2      	; 0xd2 <DIO_set_pin_dir+0x1a>
  d0:	83 c0       	rjmp	.+262    	; 0x1d8 <DIO_set_pin_dir+0x120>
  d2:	0f c0       	rjmp	.+30     	; 0xf2 <DIO_set_pin_dir+0x3a>
  d4:	82 36       	cpi	r24, 0x62	; 98
  d6:	51 f1       	breq	.+84     	; 0x12c <DIO_set_pin_dir+0x74>
  d8:	83 36       	cpi	r24, 0x63	; 99
  da:	20 f4       	brcc	.+8      	; 0xe4 <DIO_set_pin_dir+0x2c>
  dc:	81 36       	cpi	r24, 0x61	; 97
  de:	09 f0       	breq	.+2      	; 0xe2 <DIO_set_pin_dir+0x2a>
  e0:	7b c0       	rjmp	.+246    	; 0x1d8 <DIO_set_pin_dir+0x120>
  e2:	07 c0       	rjmp	.+14     	; 0xf2 <DIO_set_pin_dir+0x3a>
  e4:	83 36       	cpi	r24, 0x63	; 99
  e6:	09 f4       	brne	.+2      	; 0xea <DIO_set_pin_dir+0x32>
  e8:	3e c0       	rjmp	.+124    	; 0x166 <DIO_set_pin_dir+0xae>
  ea:	84 36       	cpi	r24, 0x64	; 100
  ec:	09 f0       	breq	.+2      	; 0xf0 <DIO_set_pin_dir+0x38>
  ee:	74 c0       	rjmp	.+232    	; 0x1d8 <DIO_set_pin_dir+0x120>
  f0:	57 c0       	rjmp	.+174    	; 0x1a0 <DIO_set_pin_dir+0xe8>
	{
		case 'A' :
		case 'a' :
		{
			if(dir != 0)
  f2:	44 23       	and	r20, r20
  f4:	69 f0       	breq	.+26     	; 0x110 <DIO_set_pin_dir+0x58>
			{
				SET_BIT(DDRA,pin);
  f6:	2a b3       	in	r18, 0x1a	; 26
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	ac 01       	movw	r20, r24
  fe:	02 c0       	rjmp	.+4      	; 0x104 <DIO_set_pin_dir+0x4c>
 100:	44 0f       	add	r20, r20
 102:	55 1f       	adc	r21, r21
 104:	6a 95       	dec	r22
 106:	e2 f7       	brpl	.-8      	; 0x100 <DIO_set_pin_dir+0x48>
 108:	ba 01       	movw	r22, r20
 10a:	62 2b       	or	r22, r18
 10c:	6a bb       	out	0x1a, r22	; 26
 10e:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(DDRA,pin);
 110:	2a b3       	in	r18, 0x1a	; 26
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	ac 01       	movw	r20, r24
 118:	02 c0       	rjmp	.+4      	; 0x11e <DIO_set_pin_dir+0x66>
 11a:	44 0f       	add	r20, r20
 11c:	55 1f       	adc	r21, r21
 11e:	6a 95       	dec	r22
 120:	e2 f7       	brpl	.-8      	; 0x11a <DIO_set_pin_dir+0x62>
 122:	ba 01       	movw	r22, r20
 124:	60 95       	com	r22
 126:	62 23       	and	r22, r18
 128:	6a bb       	out	0x1a, r22	; 26
 12a:	08 95       	ret
			break;
		}
		case 'B' :
		case 'b' :
		{
			if(dir != 0)
 12c:	44 23       	and	r20, r20
 12e:	69 f0       	breq	.+26     	; 0x14a <DIO_set_pin_dir+0x92>
			{
				SET_BIT(DDRB,pin);
 130:	27 b3       	in	r18, 0x17	; 23
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	ac 01       	movw	r20, r24
 138:	02 c0       	rjmp	.+4      	; 0x13e <DIO_set_pin_dir+0x86>
 13a:	44 0f       	add	r20, r20
 13c:	55 1f       	adc	r21, r21
 13e:	6a 95       	dec	r22
 140:	e2 f7       	brpl	.-8      	; 0x13a <DIO_set_pin_dir+0x82>
 142:	ba 01       	movw	r22, r20
 144:	62 2b       	or	r22, r18
 146:	67 bb       	out	0x17, r22	; 23
 148:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(DDRB,pin);
 14a:	27 b3       	in	r18, 0x17	; 23
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	ac 01       	movw	r20, r24
 152:	02 c0       	rjmp	.+4      	; 0x158 <DIO_set_pin_dir+0xa0>
 154:	44 0f       	add	r20, r20
 156:	55 1f       	adc	r21, r21
 158:	6a 95       	dec	r22
 15a:	e2 f7       	brpl	.-8      	; 0x154 <DIO_set_pin_dir+0x9c>
 15c:	ba 01       	movw	r22, r20
 15e:	60 95       	com	r22
 160:	62 23       	and	r22, r18
 162:	67 bb       	out	0x17, r22	; 23
 164:	08 95       	ret
			break;
		}
		case 'C' :
		case 'c' :
		{
			if(dir != 0)
 166:	44 23       	and	r20, r20
 168:	69 f0       	breq	.+26     	; 0x184 <DIO_set_pin_dir+0xcc>
			{
				SET_BIT(DDRC,pin);
 16a:	24 b3       	in	r18, 0x14	; 20
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	ac 01       	movw	r20, r24
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_set_pin_dir+0xc0>
 174:	44 0f       	add	r20, r20
 176:	55 1f       	adc	r21, r21
 178:	6a 95       	dec	r22
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_set_pin_dir+0xbc>
 17c:	ba 01       	movw	r22, r20
 17e:	62 2b       	or	r22, r18
 180:	64 bb       	out	0x14, r22	; 20
 182:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(DDRC,pin);
 184:	24 b3       	in	r18, 0x14	; 20
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	ac 01       	movw	r20, r24
 18c:	02 c0       	rjmp	.+4      	; 0x192 <DIO_set_pin_dir+0xda>
 18e:	44 0f       	add	r20, r20
 190:	55 1f       	adc	r21, r21
 192:	6a 95       	dec	r22
 194:	e2 f7       	brpl	.-8      	; 0x18e <DIO_set_pin_dir+0xd6>
 196:	ba 01       	movw	r22, r20
 198:	60 95       	com	r22
 19a:	62 23       	and	r22, r18
 19c:	64 bb       	out	0x14, r22	; 20
 19e:	08 95       	ret
			break;
		}
		case 'D' :
		case 'd' :
		{
			if(dir != 0)
 1a0:	44 23       	and	r20, r20
 1a2:	69 f0       	breq	.+26     	; 0x1be <DIO_set_pin_dir+0x106>
			{
				SET_BIT(DDRD,pin);
 1a4:	21 b3       	in	r18, 0x11	; 17
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	ac 01       	movw	r20, r24
 1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <DIO_set_pin_dir+0xfa>
 1ae:	44 0f       	add	r20, r20
 1b0:	55 1f       	adc	r21, r21
 1b2:	6a 95       	dec	r22
 1b4:	e2 f7       	brpl	.-8      	; 0x1ae <DIO_set_pin_dir+0xf6>
 1b6:	ba 01       	movw	r22, r20
 1b8:	62 2b       	or	r22, r18
 1ba:	61 bb       	out	0x11, r22	; 17
 1bc:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(DDRD,pin);
 1be:	21 b3       	in	r18, 0x11	; 17
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	ac 01       	movw	r20, r24
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <DIO_set_pin_dir+0x114>
 1c8:	44 0f       	add	r20, r20
 1ca:	55 1f       	adc	r21, r21
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <DIO_set_pin_dir+0x110>
 1d0:	ba 01       	movw	r22, r20
 1d2:	60 95       	com	r22
 1d4:	62 23       	and	r22, r18
 1d6:	61 bb       	out	0x11, r22	; 17
 1d8:	08 95       	ret

000001da <DIO_write_pin>:
	}
}

void DIO_write_pin(uint8_t port,uint8_t pin,uint8_t val)
{
	switch(port)
 1da:	84 34       	cpi	r24, 0x44	; 68
 1dc:	09 f4       	brne	.+2      	; 0x1e0 <DIO_write_pin+0x6>
 1de:	71 c0       	rjmp	.+226    	; 0x2c2 <DIO_write_pin+0xe8>
 1e0:	85 34       	cpi	r24, 0x45	; 69
 1e2:	48 f4       	brcc	.+18     	; 0x1f6 <DIO_write_pin+0x1c>
 1e4:	82 34       	cpi	r24, 0x42	; 66
 1e6:	99 f1       	breq	.+102    	; 0x24e <DIO_write_pin+0x74>
 1e8:	83 34       	cpi	r24, 0x43	; 67
 1ea:	08 f0       	brcs	.+2      	; 0x1ee <DIO_write_pin+0x14>
 1ec:	4d c0       	rjmp	.+154    	; 0x288 <DIO_write_pin+0xae>
 1ee:	81 34       	cpi	r24, 0x41	; 65
 1f0:	09 f0       	breq	.+2      	; 0x1f4 <DIO_write_pin+0x1a>
 1f2:	83 c0       	rjmp	.+262    	; 0x2fa <DIO_write_pin+0x120>
 1f4:	0f c0       	rjmp	.+30     	; 0x214 <DIO_write_pin+0x3a>
 1f6:	82 36       	cpi	r24, 0x62	; 98
 1f8:	51 f1       	breq	.+84     	; 0x24e <DIO_write_pin+0x74>
 1fa:	83 36       	cpi	r24, 0x63	; 99
 1fc:	20 f4       	brcc	.+8      	; 0x206 <DIO_write_pin+0x2c>
 1fe:	81 36       	cpi	r24, 0x61	; 97
 200:	09 f0       	breq	.+2      	; 0x204 <DIO_write_pin+0x2a>
 202:	7b c0       	rjmp	.+246    	; 0x2fa <DIO_write_pin+0x120>
 204:	07 c0       	rjmp	.+14     	; 0x214 <DIO_write_pin+0x3a>
 206:	83 36       	cpi	r24, 0x63	; 99
 208:	09 f4       	brne	.+2      	; 0x20c <DIO_write_pin+0x32>
 20a:	3e c0       	rjmp	.+124    	; 0x288 <DIO_write_pin+0xae>
 20c:	84 36       	cpi	r24, 0x64	; 100
 20e:	09 f0       	breq	.+2      	; 0x212 <DIO_write_pin+0x38>
 210:	74 c0       	rjmp	.+232    	; 0x2fa <DIO_write_pin+0x120>
 212:	57 c0       	rjmp	.+174    	; 0x2c2 <DIO_write_pin+0xe8>
	{
		case 'A':
		case 'a':
		{
			if(val != 0)
 214:	44 23       	and	r20, r20
 216:	69 f0       	breq	.+26     	; 0x232 <DIO_write_pin+0x58>
			{
				SET_BIT(PORTA,pin);
 218:	2b b3       	in	r18, 0x1b	; 27
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	ac 01       	movw	r20, r24
 220:	02 c0       	rjmp	.+4      	; 0x226 <DIO_write_pin+0x4c>
 222:	44 0f       	add	r20, r20
 224:	55 1f       	adc	r21, r21
 226:	6a 95       	dec	r22
 228:	e2 f7       	brpl	.-8      	; 0x222 <DIO_write_pin+0x48>
 22a:	ba 01       	movw	r22, r20
 22c:	62 2b       	or	r22, r18
 22e:	6b bb       	out	0x1b, r22	; 27
 230:	08 95       	ret
			}
				else
			{
				CLEAR_BIT(PORTA,pin);
 232:	2b b3       	in	r18, 0x1b	; 27
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	ac 01       	movw	r20, r24
 23a:	02 c0       	rjmp	.+4      	; 0x240 <DIO_write_pin+0x66>
 23c:	44 0f       	add	r20, r20
 23e:	55 1f       	adc	r21, r21
 240:	6a 95       	dec	r22
 242:	e2 f7       	brpl	.-8      	; 0x23c <DIO_write_pin+0x62>
 244:	ba 01       	movw	r22, r20
 246:	60 95       	com	r22
 248:	62 23       	and	r22, r18
 24a:	6b bb       	out	0x1b, r22	; 27
 24c:	08 95       	ret
			break;			
		}
		case 'B':
		case 'b':
		{
			if(val != 0)
 24e:	44 23       	and	r20, r20
 250:	69 f0       	breq	.+26     	; 0x26c <DIO_write_pin+0x92>
			{
				SET_BIT(PORTB,pin);
 252:	28 b3       	in	r18, 0x18	; 24
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	ac 01       	movw	r20, r24
 25a:	02 c0       	rjmp	.+4      	; 0x260 <DIO_write_pin+0x86>
 25c:	44 0f       	add	r20, r20
 25e:	55 1f       	adc	r21, r21
 260:	6a 95       	dec	r22
 262:	e2 f7       	brpl	.-8      	; 0x25c <DIO_write_pin+0x82>
 264:	ba 01       	movw	r22, r20
 266:	62 2b       	or	r22, r18
 268:	68 bb       	out	0x18, r22	; 24
 26a:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(PORTB,pin);
 26c:	28 b3       	in	r18, 0x18	; 24
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	ac 01       	movw	r20, r24
 274:	02 c0       	rjmp	.+4      	; 0x27a <DIO_write_pin+0xa0>
 276:	44 0f       	add	r20, r20
 278:	55 1f       	adc	r21, r21
 27a:	6a 95       	dec	r22
 27c:	e2 f7       	brpl	.-8      	; 0x276 <DIO_write_pin+0x9c>
 27e:	ba 01       	movw	r22, r20
 280:	60 95       	com	r22
 282:	62 23       	and	r22, r18
 284:	68 bb       	out	0x18, r22	; 24
 286:	08 95       	ret
			break;		
		}
		case 'C':
		case 'c':
		{
			if(val != 0)
 288:	44 23       	and	r20, r20
 28a:	69 f0       	breq	.+26     	; 0x2a6 <DIO_write_pin+0xcc>
			{
				SET_BIT(PORTC,pin);
 28c:	25 b3       	in	r18, 0x15	; 21
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	ac 01       	movw	r20, r24
 294:	02 c0       	rjmp	.+4      	; 0x29a <DIO_write_pin+0xc0>
 296:	44 0f       	add	r20, r20
 298:	55 1f       	adc	r21, r21
 29a:	6a 95       	dec	r22
 29c:	e2 f7       	brpl	.-8      	; 0x296 <DIO_write_pin+0xbc>
 29e:	ba 01       	movw	r22, r20
 2a0:	62 2b       	or	r22, r18
 2a2:	65 bb       	out	0x15, r22	; 21
 2a4:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(PORTC,pin);
 2a6:	25 b3       	in	r18, 0x15	; 21
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	ac 01       	movw	r20, r24
 2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <DIO_write_pin+0xda>
 2b0:	44 0f       	add	r20, r20
 2b2:	55 1f       	adc	r21, r21
 2b4:	6a 95       	dec	r22
 2b6:	e2 f7       	brpl	.-8      	; 0x2b0 <DIO_write_pin+0xd6>
 2b8:	ba 01       	movw	r22, r20
 2ba:	60 95       	com	r22
 2bc:	62 23       	and	r22, r18
 2be:	65 bb       	out	0x15, r22	; 21
 2c0:	08 95       	ret
			break;
		}
		case 'D':
		case 'd':
		{
			if(val != 0)
 2c2:	44 23       	and	r20, r20
 2c4:	69 f0       	breq	.+26     	; 0x2e0 <DIO_write_pin+0x106>
			{
				SET_BIT(PORTD,pin);
 2c6:	22 b3       	in	r18, 0x12	; 18
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	ac 01       	movw	r20, r24
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <DIO_write_pin+0xfa>
 2d0:	44 0f       	add	r20, r20
 2d2:	55 1f       	adc	r21, r21
 2d4:	6a 95       	dec	r22
 2d6:	e2 f7       	brpl	.-8      	; 0x2d0 <DIO_write_pin+0xf6>
 2d8:	ba 01       	movw	r22, r20
 2da:	62 2b       	or	r22, r18
 2dc:	62 bb       	out	0x12, r22	; 18
 2de:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(PORTD,pin);
 2e0:	22 b3       	in	r18, 0x12	; 18
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	ac 01       	movw	r20, r24
 2e8:	02 c0       	rjmp	.+4      	; 0x2ee <DIO_write_pin+0x114>
 2ea:	44 0f       	add	r20, r20
 2ec:	55 1f       	adc	r21, r21
 2ee:	6a 95       	dec	r22
 2f0:	e2 f7       	brpl	.-8      	; 0x2ea <DIO_write_pin+0x110>
 2f2:	ba 01       	movw	r22, r20
 2f4:	60 95       	com	r22
 2f6:	62 23       	and	r22, r18
 2f8:	62 bb       	out	0x12, r22	; 18
 2fa:	08 95       	ret

000002fc <DIO_toggle_pin>:
	}
}

void DIO_toggle_pin(uint8_t port,uint8_t pin)
{
	switch(port)
 2fc:	84 34       	cpi	r24, 0x44	; 68
 2fe:	09 f4       	brne	.+2      	; 0x302 <DIO_toggle_pin+0x6>
 300:	3d c0       	rjmp	.+122    	; 0x37c <DIO_toggle_pin+0x80>
 302:	85 34       	cpi	r24, 0x45	; 69
 304:	40 f4       	brcc	.+16     	; 0x316 <DIO_toggle_pin+0x1a>
 306:	82 34       	cpi	r24, 0x42	; 66
 308:	f9 f0       	breq	.+62     	; 0x348 <DIO_toggle_pin+0x4c>
 30a:	83 34       	cpi	r24, 0x43	; 67
 30c:	50 f5       	brcc	.+84     	; 0x362 <DIO_toggle_pin+0x66>
 30e:	81 34       	cpi	r24, 0x41	; 65
 310:	09 f0       	breq	.+2      	; 0x314 <DIO_toggle_pin+0x18>
 312:	40 c0       	rjmp	.+128    	; 0x394 <DIO_toggle_pin+0x98>
 314:	0c c0       	rjmp	.+24     	; 0x32e <DIO_toggle_pin+0x32>
 316:	82 36       	cpi	r24, 0x62	; 98
 318:	b9 f0       	breq	.+46     	; 0x348 <DIO_toggle_pin+0x4c>
 31a:	83 36       	cpi	r24, 0x63	; 99
 31c:	18 f4       	brcc	.+6      	; 0x324 <DIO_toggle_pin+0x28>
 31e:	81 36       	cpi	r24, 0x61	; 97
 320:	c9 f5       	brne	.+114    	; 0x394 <DIO_toggle_pin+0x98>
 322:	05 c0       	rjmp	.+10     	; 0x32e <DIO_toggle_pin+0x32>
 324:	83 36       	cpi	r24, 0x63	; 99
 326:	e9 f0       	breq	.+58     	; 0x362 <DIO_toggle_pin+0x66>
 328:	84 36       	cpi	r24, 0x64	; 100
 32a:	a1 f5       	brne	.+104    	; 0x394 <DIO_toggle_pin+0x98>
 32c:	27 c0       	rjmp	.+78     	; 0x37c <DIO_toggle_pin+0x80>
	{
		case 'A':
		case 'a':
			TOG_BIT(PORTA,pin);
 32e:	2b b3       	in	r18, 0x1b	; 27
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	ac 01       	movw	r20, r24
 336:	02 c0       	rjmp	.+4      	; 0x33c <DIO_toggle_pin+0x40>
 338:	44 0f       	add	r20, r20
 33a:	55 1f       	adc	r21, r21
 33c:	6a 95       	dec	r22
 33e:	e2 f7       	brpl	.-8      	; 0x338 <DIO_toggle_pin+0x3c>
 340:	ba 01       	movw	r22, r20
 342:	62 27       	eor	r22, r18
 344:	6b bb       	out	0x1b, r22	; 27
			break;
 346:	08 95       	ret
		case 'B':
		case 'b':
			TOG_BIT(PORTB,pin);
 348:	28 b3       	in	r18, 0x18	; 24
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	ac 01       	movw	r20, r24
 350:	02 c0       	rjmp	.+4      	; 0x356 <DIO_toggle_pin+0x5a>
 352:	44 0f       	add	r20, r20
 354:	55 1f       	adc	r21, r21
 356:	6a 95       	dec	r22
 358:	e2 f7       	brpl	.-8      	; 0x352 <DIO_toggle_pin+0x56>
 35a:	ba 01       	movw	r22, r20
 35c:	62 27       	eor	r22, r18
 35e:	68 bb       	out	0x18, r22	; 24
			break;
 360:	08 95       	ret
		case 'C':
		case 'c':
			TOG_BIT(PORTC,pin);
 362:	25 b3       	in	r18, 0x15	; 21
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	ac 01       	movw	r20, r24
 36a:	02 c0       	rjmp	.+4      	; 0x370 <DIO_toggle_pin+0x74>
 36c:	44 0f       	add	r20, r20
 36e:	55 1f       	adc	r21, r21
 370:	6a 95       	dec	r22
 372:	e2 f7       	brpl	.-8      	; 0x36c <DIO_toggle_pin+0x70>
 374:	ba 01       	movw	r22, r20
 376:	62 27       	eor	r22, r18
 378:	65 bb       	out	0x15, r22	; 21
			break;
 37a:	08 95       	ret
		case 'D':
		case 'd':
			TOG_BIT(PORTD,pin);
 37c:	22 b3       	in	r18, 0x12	; 18
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	ac 01       	movw	r20, r24
 384:	02 c0       	rjmp	.+4      	; 0x38a <DIO_toggle_pin+0x8e>
 386:	44 0f       	add	r20, r20
 388:	55 1f       	adc	r21, r21
 38a:	6a 95       	dec	r22
 38c:	e2 f7       	brpl	.-8      	; 0x386 <DIO_toggle_pin+0x8a>
 38e:	ba 01       	movw	r22, r20
 390:	62 27       	eor	r22, r18
 392:	62 bb       	out	0x12, r22	; 18
 394:	08 95       	ret

00000396 <DIO_u8read_pin>:
}

uint8_t DIO_u8read_pin(uint8_t port,uint8_t pin)
{
	unsigned char val;
	switch(port)
 396:	84 34       	cpi	r24, 0x44	; 68
 398:	b1 f1       	breq	.+108    	; 0x406 <DIO_u8read_pin+0x70>
 39a:	85 34       	cpi	r24, 0x45	; 69
 39c:	38 f4       	brcc	.+14     	; 0x3ac <DIO_u8read_pin+0x16>
 39e:	82 34       	cpi	r24, 0x42	; 66
 3a0:	e1 f0       	breq	.+56     	; 0x3da <DIO_u8read_pin+0x44>
 3a2:	83 34       	cpi	r24, 0x43	; 67
 3a4:	28 f5       	brcc	.+74     	; 0x3f0 <DIO_u8read_pin+0x5a>
 3a6:	81 34       	cpi	r24, 0x41	; 65
 3a8:	c1 f5       	brne	.+112    	; 0x41a <DIO_u8read_pin+0x84>
 3aa:	0c c0       	rjmp	.+24     	; 0x3c4 <DIO_u8read_pin+0x2e>
 3ac:	82 36       	cpi	r24, 0x62	; 98
 3ae:	a9 f0       	breq	.+42     	; 0x3da <DIO_u8read_pin+0x44>
 3b0:	83 36       	cpi	r24, 0x63	; 99
 3b2:	18 f4       	brcc	.+6      	; 0x3ba <DIO_u8read_pin+0x24>
 3b4:	81 36       	cpi	r24, 0x61	; 97
 3b6:	89 f5       	brne	.+98     	; 0x41a <DIO_u8read_pin+0x84>
 3b8:	05 c0       	rjmp	.+10     	; 0x3c4 <DIO_u8read_pin+0x2e>
 3ba:	83 36       	cpi	r24, 0x63	; 99
 3bc:	c9 f0       	breq	.+50     	; 0x3f0 <DIO_u8read_pin+0x5a>
 3be:	84 36       	cpi	r24, 0x64	; 100
 3c0:	61 f5       	brne	.+88     	; 0x41a <DIO_u8read_pin+0x84>
 3c2:	21 c0       	rjmp	.+66     	; 0x406 <DIO_u8read_pin+0x70>
	{
		case 'A':
		case 'a':
			val = READ_BIT(PINA,pin);
 3c4:	29 b3       	in	r18, 0x19	; 25
 3c6:	30 e0       	ldi	r19, 0x00	; 0
 3c8:	c9 01       	movw	r24, r18
 3ca:	02 c0       	rjmp	.+4      	; 0x3d0 <DIO_u8read_pin+0x3a>
 3cc:	95 95       	asr	r25
 3ce:	87 95       	ror	r24
 3d0:	6a 95       	dec	r22
 3d2:	e2 f7       	brpl	.-8      	; 0x3cc <DIO_u8read_pin+0x36>
 3d4:	98 2f       	mov	r25, r24
 3d6:	91 70       	andi	r25, 0x01	; 1
			break;
 3d8:	20 c0       	rjmp	.+64     	; 0x41a <DIO_u8read_pin+0x84>
		case 'B':
		case 'b':
		val = READ_BIT(PINB,pin);
 3da:	26 b3       	in	r18, 0x16	; 22
 3dc:	30 e0       	ldi	r19, 0x00	; 0
 3de:	c9 01       	movw	r24, r18
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <DIO_u8read_pin+0x50>
 3e2:	95 95       	asr	r25
 3e4:	87 95       	ror	r24
 3e6:	6a 95       	dec	r22
 3e8:	e2 f7       	brpl	.-8      	; 0x3e2 <DIO_u8read_pin+0x4c>
 3ea:	98 2f       	mov	r25, r24
 3ec:	91 70       	andi	r25, 0x01	; 1
		break;
 3ee:	15 c0       	rjmp	.+42     	; 0x41a <DIO_u8read_pin+0x84>
		case 'C':
		case 'c':
		val = READ_BIT(PINC,pin);
 3f0:	23 b3       	in	r18, 0x13	; 19
 3f2:	30 e0       	ldi	r19, 0x00	; 0
 3f4:	c9 01       	movw	r24, r18
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <DIO_u8read_pin+0x66>
 3f8:	95 95       	asr	r25
 3fa:	87 95       	ror	r24
 3fc:	6a 95       	dec	r22
 3fe:	e2 f7       	brpl	.-8      	; 0x3f8 <DIO_u8read_pin+0x62>
 400:	98 2f       	mov	r25, r24
 402:	91 70       	andi	r25, 0x01	; 1
		break;
 404:	0a c0       	rjmp	.+20     	; 0x41a <DIO_u8read_pin+0x84>
		case 'D':
		case 'd':
		val = READ_BIT(PIND,pin);
 406:	20 b3       	in	r18, 0x10	; 16
 408:	30 e0       	ldi	r19, 0x00	; 0
 40a:	c9 01       	movw	r24, r18
 40c:	02 c0       	rjmp	.+4      	; 0x412 <DIO_u8read_pin+0x7c>
 40e:	95 95       	asr	r25
 410:	87 95       	ror	r24
 412:	6a 95       	dec	r22
 414:	e2 f7       	brpl	.-8      	; 0x40e <DIO_u8read_pin+0x78>
 416:	98 2f       	mov	r25, r24
 418:	91 70       	andi	r25, 0x01	; 1
		break;
	}
	return val;
}
 41a:	89 2f       	mov	r24, r25
 41c:	08 95       	ret

0000041e <DIO_set_port_dir>:

void DIO_set_port_dir(uint8_t port,uint8_t val)
{
	switch(port)
 41e:	84 34       	cpi	r24, 0x44	; 68
 420:	d9 f0       	breq	.+54     	; 0x458 <DIO_set_port_dir+0x3a>
 422:	85 34       	cpi	r24, 0x45	; 69
 424:	38 f4       	brcc	.+14     	; 0x434 <DIO_set_port_dir+0x16>
 426:	82 34       	cpi	r24, 0x42	; 66
 428:	99 f0       	breq	.+38     	; 0x450 <DIO_set_port_dir+0x32>
 42a:	83 34       	cpi	r24, 0x43	; 67
 42c:	98 f4       	brcc	.+38     	; 0x454 <DIO_set_port_dir+0x36>
 42e:	81 34       	cpi	r24, 0x41	; 65
 430:	a1 f4       	brne	.+40     	; 0x45a <DIO_set_port_dir+0x3c>
 432:	0c c0       	rjmp	.+24     	; 0x44c <DIO_set_port_dir+0x2e>
 434:	82 36       	cpi	r24, 0x62	; 98
 436:	61 f0       	breq	.+24     	; 0x450 <DIO_set_port_dir+0x32>
 438:	83 36       	cpi	r24, 0x63	; 99
 43a:	18 f4       	brcc	.+6      	; 0x442 <DIO_set_port_dir+0x24>
 43c:	81 36       	cpi	r24, 0x61	; 97
 43e:	69 f4       	brne	.+26     	; 0x45a <DIO_set_port_dir+0x3c>
 440:	05 c0       	rjmp	.+10     	; 0x44c <DIO_set_port_dir+0x2e>
 442:	83 36       	cpi	r24, 0x63	; 99
 444:	39 f0       	breq	.+14     	; 0x454 <DIO_set_port_dir+0x36>
 446:	84 36       	cpi	r24, 0x64	; 100
 448:	41 f4       	brne	.+16     	; 0x45a <DIO_set_port_dir+0x3c>
 44a:	06 c0       	rjmp	.+12     	; 0x458 <DIO_set_port_dir+0x3a>
	{
		case 'A':
		case 'a':
			DDRA = val;
 44c:	6a bb       	out	0x1a, r22	; 26
			break;
 44e:	08 95       	ret
		case 'B':
		case 'b':
			DDRB = val;
 450:	67 bb       	out	0x17, r22	; 23
			break;
 452:	08 95       	ret
		case 'C':
		case 'c':
			DDRC = val;
 454:	64 bb       	out	0x14, r22	; 20
			break;
 456:	08 95       	ret
		case 'D':
		case 'd':
			DDRD = val;
 458:	61 bb       	out	0x11, r22	; 17
 45a:	08 95       	ret

0000045c <DIO_write_port>:
	}
}

void DIO_write_port(uint8_t port,uint8_t val)
{
	switch(port)
 45c:	84 34       	cpi	r24, 0x44	; 68
 45e:	d9 f0       	breq	.+54     	; 0x496 <DIO_write_port+0x3a>
 460:	85 34       	cpi	r24, 0x45	; 69
 462:	38 f4       	brcc	.+14     	; 0x472 <DIO_write_port+0x16>
 464:	82 34       	cpi	r24, 0x42	; 66
 466:	99 f0       	breq	.+38     	; 0x48e <DIO_write_port+0x32>
 468:	83 34       	cpi	r24, 0x43	; 67
 46a:	98 f4       	brcc	.+38     	; 0x492 <DIO_write_port+0x36>
 46c:	81 34       	cpi	r24, 0x41	; 65
 46e:	a1 f4       	brne	.+40     	; 0x498 <DIO_write_port+0x3c>
 470:	0c c0       	rjmp	.+24     	; 0x48a <DIO_write_port+0x2e>
 472:	82 36       	cpi	r24, 0x62	; 98
 474:	61 f0       	breq	.+24     	; 0x48e <DIO_write_port+0x32>
 476:	83 36       	cpi	r24, 0x63	; 99
 478:	18 f4       	brcc	.+6      	; 0x480 <DIO_write_port+0x24>
 47a:	81 36       	cpi	r24, 0x61	; 97
 47c:	69 f4       	brne	.+26     	; 0x498 <DIO_write_port+0x3c>
 47e:	05 c0       	rjmp	.+10     	; 0x48a <DIO_write_port+0x2e>
 480:	83 36       	cpi	r24, 0x63	; 99
 482:	39 f0       	breq	.+14     	; 0x492 <DIO_write_port+0x36>
 484:	84 36       	cpi	r24, 0x64	; 100
 486:	41 f4       	brne	.+16     	; 0x498 <DIO_write_port+0x3c>
 488:	06 c0       	rjmp	.+12     	; 0x496 <DIO_write_port+0x3a>
	{
		case 'A':
		case 'a':
		PORTA = val;
 48a:	6b bb       	out	0x1b, r22	; 27
		break;
 48c:	08 95       	ret
		case 'B':
		case 'b':
		PORTB = val;
 48e:	68 bb       	out	0x18, r22	; 24
		break;
 490:	08 95       	ret
		case 'C':
		case 'c':
		PORTB = val;
 492:	68 bb       	out	0x18, r22	; 24
		break;
 494:	08 95       	ret
		case 'D':
		case 'd':
		PORTD = val;
 496:	62 bb       	out	0x12, r22	; 18
 498:	08 95       	ret

0000049a <DIO_u8read_port>:
}

unsigned DIO_u8read_port(uint8_t port)
{
	unsigned char val;
	switch(port)
 49a:	84 34       	cpi	r24, 0x44	; 68
 49c:	d9 f0       	breq	.+54     	; 0x4d4 <DIO_u8read_port+0x3a>
 49e:	85 34       	cpi	r24, 0x45	; 69
 4a0:	38 f4       	brcc	.+14     	; 0x4b0 <DIO_u8read_port+0x16>
 4a2:	82 34       	cpi	r24, 0x42	; 66
 4a4:	99 f0       	breq	.+38     	; 0x4cc <DIO_u8read_port+0x32>
 4a6:	83 34       	cpi	r24, 0x43	; 67
 4a8:	98 f4       	brcc	.+38     	; 0x4d0 <DIO_u8read_port+0x36>
 4aa:	81 34       	cpi	r24, 0x41	; 65
 4ac:	a1 f4       	brne	.+40     	; 0x4d6 <DIO_u8read_port+0x3c>
 4ae:	0c c0       	rjmp	.+24     	; 0x4c8 <DIO_u8read_port+0x2e>
 4b0:	82 36       	cpi	r24, 0x62	; 98
 4b2:	61 f0       	breq	.+24     	; 0x4cc <DIO_u8read_port+0x32>
 4b4:	83 36       	cpi	r24, 0x63	; 99
 4b6:	18 f4       	brcc	.+6      	; 0x4be <DIO_u8read_port+0x24>
 4b8:	81 36       	cpi	r24, 0x61	; 97
 4ba:	69 f4       	brne	.+26     	; 0x4d6 <DIO_u8read_port+0x3c>
 4bc:	05 c0       	rjmp	.+10     	; 0x4c8 <DIO_u8read_port+0x2e>
 4be:	83 36       	cpi	r24, 0x63	; 99
 4c0:	39 f0       	breq	.+14     	; 0x4d0 <DIO_u8read_port+0x36>
 4c2:	84 36       	cpi	r24, 0x64	; 100
 4c4:	41 f4       	brne	.+16     	; 0x4d6 <DIO_u8read_port+0x3c>
 4c6:	06 c0       	rjmp	.+12     	; 0x4d4 <DIO_u8read_port+0x3a>
	{
		case 'A':
		case 'a':
			val = PINA;
 4c8:	99 b3       	in	r25, 0x19	; 25
			break;
 4ca:	05 c0       	rjmp	.+10     	; 0x4d6 <DIO_u8read_port+0x3c>
		case 'B':
		case 'b':
			val = PINB;
 4cc:	96 b3       	in	r25, 0x16	; 22
			break;
 4ce:	03 c0       	rjmp	.+6      	; 0x4d6 <DIO_u8read_port+0x3c>
		case 'C':
		case 'c':
			val = PINC;
 4d0:	93 b3       	in	r25, 0x13	; 19
			break;
 4d2:	01 c0       	rjmp	.+2      	; 0x4d6 <DIO_u8read_port+0x3c>
		case 'D':
		case 'd':
			val = PIND;
 4d4:	90 b3       	in	r25, 0x10	; 16
			break;
	}
	return val;
}
 4d6:	89 2f       	mov	r24, r25
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	08 95       	ret

000004dc <DIO_toggle_port>:

void DIO_toggle_port(uint8_t port)
{
	switch(port)
 4dc:	84 34       	cpi	r24, 0x44	; 68
 4de:	09 f1       	breq	.+66     	; 0x522 <DIO_toggle_port+0x46>
 4e0:	85 34       	cpi	r24, 0x45	; 69
 4e2:	38 f4       	brcc	.+14     	; 0x4f2 <DIO_toggle_port+0x16>
 4e4:	82 34       	cpi	r24, 0x42	; 66
 4e6:	a9 f0       	breq	.+42     	; 0x512 <DIO_toggle_port+0x36>
 4e8:	83 34       	cpi	r24, 0x43	; 67
 4ea:	b8 f4       	brcc	.+46     	; 0x51a <DIO_toggle_port+0x3e>
 4ec:	81 34       	cpi	r24, 0x41	; 65
 4ee:	e1 f4       	brne	.+56     	; 0x528 <DIO_toggle_port+0x4c>
 4f0:	0c c0       	rjmp	.+24     	; 0x50a <DIO_toggle_port+0x2e>
 4f2:	82 36       	cpi	r24, 0x62	; 98
 4f4:	71 f0       	breq	.+28     	; 0x512 <DIO_toggle_port+0x36>
 4f6:	83 36       	cpi	r24, 0x63	; 99
 4f8:	18 f4       	brcc	.+6      	; 0x500 <DIO_toggle_port+0x24>
 4fa:	81 36       	cpi	r24, 0x61	; 97
 4fc:	a9 f4       	brne	.+42     	; 0x528 <DIO_toggle_port+0x4c>
 4fe:	05 c0       	rjmp	.+10     	; 0x50a <DIO_toggle_port+0x2e>
 500:	83 36       	cpi	r24, 0x63	; 99
 502:	59 f0       	breq	.+22     	; 0x51a <DIO_toggle_port+0x3e>
 504:	84 36       	cpi	r24, 0x64	; 100
 506:	81 f4       	brne	.+32     	; 0x528 <DIO_toggle_port+0x4c>
 508:	0c c0       	rjmp	.+24     	; 0x522 <DIO_toggle_port+0x46>
	{
		case 'A':
		case 'a':
			PORTA ^= 0xFF;
 50a:	8b b3       	in	r24, 0x1b	; 27
 50c:	80 95       	com	r24
 50e:	8b bb       	out	0x1b, r24	; 27
			break;
 510:	08 95       	ret
		case 'B':
		case 'b':
			PORTB ^= 0xFF;
 512:	88 b3       	in	r24, 0x18	; 24
 514:	80 95       	com	r24
 516:	88 bb       	out	0x18, r24	; 24
			break;
 518:	08 95       	ret
		case 'C':
		case 'c':
			PORTC ^= 0xFF;
 51a:	85 b3       	in	r24, 0x15	; 21
 51c:	80 95       	com	r24
 51e:	85 bb       	out	0x15, r24	; 21
			break;
 520:	08 95       	ret
		case 'D':
		case 'd':
			PORTD ^= 0xFF;
 522:	82 b3       	in	r24, 0x12	; 18
 524:	80 95       	com	r24
 526:	82 bb       	out	0x12, r24	; 18
 528:	08 95       	ret

0000052a <_exit>:
 52a:	f8 94       	cli

0000052c <__stop_program>:
 52c:	ff cf       	rjmp	.-2      	; 0x52c <__stop_program>
